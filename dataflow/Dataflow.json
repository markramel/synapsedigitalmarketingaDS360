{
	"name": "Dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SourceDataset_867",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DigitalMarketingETL",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tSOURCE as string,\n\t\txMediaGroup as string,\n\t\tMEDIATYPE as string,\n\t\txMediaChannel as string,\n\t\tAgencyChannel_Name as string,\n\t\tCampaignName as string,\n\t\tAccount as string,\n\t\tLOB as string,\n\t\tBU as string,\n\t\tPARENTCAMPAIGN_NAME as string,\n\t\tSUBCAMPAIGNNAME as string,\n\t\tCOUNTRYCODE as string,\n\t\tCOUNTRYNAME as string,\n\t\tREGION as string,\n\t\txCampaignQuarter as string,\n\t\tSearchKeywordType as string,\n\t\tSearchMatchType as string,\n\t\tEmeaRegion as string,\n\t\tEmeaSubRegion as string,\n\t\txAccountCurrency as string,\n\t\tCompliant as string,\n\t\tAgencyOwnerMarket as string,\n\t\tCampaignScale as string,\n\t\tCampaignObjective as string,\n\t\tMediaBriefName as string,\n\t\t{Impression } as string,\n\t\tClick as string,\n\t\tView as string,\n\t\tSwipe_rate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> source1\nsource1 derive(Compliant = iif(Compliant == \"Compliant\", \"Compliance\", \"Non-Compliance\"),\n\t\tEmeaRegion = iif(isNull(EmeaRegion), \"Unclassified\", toString(EmeaRegion)),\n\t\tSearchMatchType = iif(isNull(SearchMatchType), \"Unclassified\", toString(SearchMatchType)),\n\t\tEmeaSubRegion = iif(isNull(EmeaSubRegion), \"Unclassified\", toString(EmeaSubRegion)),\n\t\tCampaignScale = iif(isNull(CampaignScale), \"Unclassified\", toString(CampaignScale)),\n\t\tCampaignObjective = iif(isNull(CampaignObjective), \"Unclassified\", toString(CampaignObjective)),\n\t\tSearchKeywordType = iif(isNull(SearchKeywordType), \"Unclassified\", toString(SearchKeywordType)),\n\t\txCampaignQuarter = iif(isNull(xCampaignQuarter), \"Unclassified\", toString(xCampaignQuarter)),\n\t\tYear = iif(isNull(at(regexSplit(xCampaignQuarter, '-'),2)),\"2020\" , at(regexSplit(xCampaignQuarter, '-'),1)),\n\t\tQuarter = iif(isNull(at(regexSplit(xCampaignQuarter, '-'),2)),at(regexSplit(xCampaignQuarter, '-'),1) , at(regexSplit(xCampaignQuarter, '-'),2)),\n\tpartitionBy('hash', 1)) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tSOURCE as string,\n\t\txMediaGroup as string,\n\t\tMEDIATYPE as string,\n\t\txMediaChannel as string,\n\t\tAgencyChannel_Name as string,\n\t\tCampaignName as string,\n\t\tAccount as string,\n\t\tLOB as string,\n\t\tBU as string,\n\t\tPARENTCAMPAIGN_NAME as string,\n\t\tSUBCAMPAIGNNAME as string,\n\t\tCOUNTRYCODE as string,\n\t\tCOUNTRYNAME as string,\n\t\tREGION as string,\n\t\txCampaignQuarter as string,\n\t\tSearchKeywordType as string,\n\t\tSearchMatchType as string,\n\t\tEmeaRegion as string,\n\t\tEmeaSubRegion as string,\n\t\txAccountCurrency as string,\n\t\tCompliant as string,\n\t\tAgencyOwnerMarket as string,\n\t\tCampaignScale as string,\n\t\tCampaignObjective as string,\n\t\tMediaBriefName as string,\n\t\tImpression as string,\n\t\tClick as string,\n\t\tView as string,\n\t\tSwipe_rate as string\n\t),\n\tformat: 'parquet',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tmapColumn(\n\t\tSOURCE,\n\t\txMediaGroup,\n\t\tMEDIATYPE,\n\t\txMediaChannel,\n\t\tAgencyChannel_Name,\n\t\tCampaignName,\n\t\tAccount,\n\t\tLOB,\n\t\tBU,\n\t\tPARENTCAMPAIGN_NAME,\n\t\tSUBCAMPAIGNNAME,\n\t\tCOUNTRYCODE,\n\t\tCOUNTRYNAME,\n\t\tREGION,\n\t\txCampaignQuarter,\n\t\tSearchKeywordType,\n\t\tSearchMatchType,\n\t\tEmeaRegion,\n\t\tEmeaSubRegion,\n\t\txAccountCurrency,\n\t\tCompliant,\n\t\tAgencyOwnerMarket,\n\t\tCampaignScale,\n\t\tCampaignObjective,\n\t\tMediaBriefName,\n\t\tImpression = {Impression },\n\t\tClick,\n\t\tView,\n\t\tSwipe_rate\n\t),\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}